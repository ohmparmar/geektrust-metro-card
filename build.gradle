plugins {
    id 'java'
    id 'jacoco'
}

group = 'com.example'
version = '1.0'
// sourceCompatibility = 1.8
// targetCompatibility = 1.8

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}


jacoco { //Please do not change this
    toolVersion = "0.8.11"
    // reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport { //Please do not change this
    reports {
        xml.required.set(true)
        csv.required.set(false)
        html.required.set(false)
        xml.outputLocation.set(file("$buildDir/jacoco/jacoco.xml"))
    }
}

jar {
    archiveBaseName = 'geektrust' //Please do not change this final artifact name
    version =  null               //Please do not change this final artifact version
    manifest {
        attributes 'Main-Class' : 'com.example.geektrust.Main' //Change this to the main class of your program which will be executed
    }
    // To create a single jar with all dependencies.
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

test { ///Please do not change this
    useJUnitPlatform()
    failOnNoDiscoveredTests = false

    testLogging {
        events "PASSED", "SKIPPED", "FAILED", "STANDARD_ERROR"
    }
    finalizedBy jacocoTestReport // report is always generated after tests run
    afterSuite { desc, result ->
        if (!desc.parent)
            println("${result.resultType} " +
                "(${result.testCount} tests, " +
                "${result.successfulTestCount} successes, " +
                "${result.failedTestCount} failures, " +
                "${result.skippedTestCount} skipped)")
        }
}


repositories {
    mavenCentral()
}

//Add your dependencies here
dependencies {
    // JUnit 5 (JUnit Jupiter API + Engine)
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    // Required for Gradle 8/9 to properly discover JUnit tests
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.2'
    // If you still have JUnit 4 tests, uncomment this:
    // testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.10.2'
}
